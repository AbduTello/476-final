@page "/recover-password"
@using DriveShare.Web.Models
@using DriveShare.Web.Services
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<PageTitle>Recover Password - DriveShare</PageTitle>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card mt-5">
                <div class="card-body">
                    <h2 class="card-title text-center mb-4">Recover Password</h2>

                     @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger">@errorMessage</div>
                    }
                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success">@successMessage</div>
                    }

                    <EditForm Model="@model" OnValidSubmit="@HandleRecovery" FormName="recovery-form">
                        <DataAnnotationsValidator />

                         <div class="mb-3">
                            <label for="email" class="form-label">Email Address</label>
                            <InputText id="email" @bind-Value="model.Email" class="form-control" />
                            <ValidationMessage For="@(() => model.Email)" class="text-danger" />
                        </div>

                         <hr />
                        <h5 class="mb-3">Security Questions</h5>

                         <div class="mb-3">
                            <label for="sq1" class="form-label">What is your mother's maiden name?</label>
                            <InputText id="sq1" @bind-Value="model.SecurityAnswer1" class="form-control" />
                            <ValidationMessage For="@(() => model.SecurityAnswer1)" class="text-danger" />
                        </div>

                        <div class="mb-3">
                            <label for="sq2" class="form-label">What was the name of your first pet?</label>
                            <InputText id="sq2" @bind-Value="model.SecurityAnswer2" class="form-control" />
                            <ValidationMessage For="@(() => model.SecurityAnswer2)" class="text-danger" />
                        </div>

                        <div class="mb-3">
                            <label for="sq3" class="form-label">In what city were you born?</label>
                            <InputText id="sq3" @bind-Value="model.SecurityAnswer3" class="form-control" />
                            <ValidationMessage For="@(() => model.SecurityAnswer3)" class="text-danger" />
                        </div>

                         <hr />

                        <div class="mb-3">
                            <label for="newPassword" class="form-label">New Password (min 6 characters)</label>
                            <InputText type="password" id="newPassword" @bind-Value="model.NewPassword" class="form-control" />
                            <ValidationMessage For="@(() => model.NewPassword)" class="text-danger" />
                        </div>

                         <button type="submit" class="btn btn-primary w-100" disabled="@isProcessing">
                            @if (isProcessing)
                            {
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                <span class="ms-2">Resetting Password...</span>
                            }
                            else
                            {
                                <span>Reset Password</span>
                            }
                        </button>
                    </EditForm>
                    <div class="text-center mt-3">
                        <a href="/login">Back to Login</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private PasswordRecoveryDto model = new();
    private bool isProcessing;
    private string? errorMessage;
    private string? successMessage;

    private async Task HandleRecovery()
    {
        isProcessing = true;
        errorMessage = null;
        successMessage = null;
        StateHasChanged();

        var (success, error) = await AuthService.RecoverPasswordAsync(model);

        if (success)
        {
            successMessage = "Password reset successfully! You can now log in with your new password.";
            model = new(); // Clear form
        }
        else
        {
            errorMessage = $"Password recovery failed: {error ?? "Incorrect email or security answers."}";
        }

        isProcessing = false;
        StateHasChanged();
    }
}